// Пример 5: Отображение окна с рамкой
#include <pdcurses.h>
#include <iostream>  // Для вывода сообщений об ошибках

int main() {
    // Инициализация ncurses
    initscr();
    if (!has_colors()) {
        endwin();
        std::cerr << "Ошибка: Терминал не поддерживает цветовой режим." << std::endl;
        return 1;
    }

    noecho();                 // Отключение отображения вводимых символов
    cbreak();                 // Ожидание ввода символов без необходимости нажимать Enter
    refresh();                // Обновление главного экрана

    // Проверка размеров терминала
    int term_height, term_width;
    getmaxyx(stdscr, term_height, term_width);
    if (term_height < 20 || term_width < 40) {
        endwin();
        std::cerr << "Ошибка: Размеры терминала слишком малы. Требуется минимум 20 строк и 40 столбцов." << std::endl;
        return 1;
    }

    // Создаем новое окно размером 10x30 с координатами начала (5, 10)
    WINDOW* win = newwin(10, 30, 5, 10);
    if (win == nullptr) {
        endwin();
        std::cerr << "Ошибка: Не удалось создать окно." << std::endl;
        return 1;
    }

    // Рисуем рамку вокруг окна (по умолчанию используются символы для вертикальных и горизонтальных линий)
    box(win, 0, 0);  // Используем стандартные символы для рамки

    // Печатаем текст внутри окна на позиции (1, 1) относительно начала окна
    mvwprintw(win, 1, 1, "Windowed text");

    // Обновляем содержимое окна, чтобы текст и рамка отобразились на экране
    wrefresh(win);

    // Ожидание ввода клавиши перед закрытием окна
    getch();

    // Удаляем окно и завершаем работу с ncurses
    delwin(win);
    endwin();

    return 0;
}
